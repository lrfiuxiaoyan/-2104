# 作业二

- ## 访谈参与人员

> 学生：刘馨蓬
>
> 记者：刘瑞芳
>
> 工作党：谢宇轩

- ## 访谈信息

> **Q1**：您最近使用DEV C++和visual studio在做什么？在使用IDE时更注重什么功能？
>
> **A1**：DEV C++主要用来写小程序，visual studio用来编写较大的项目。使用时更注重代码编写功能、分析功能、编译功能、调试功能、文件导入

> **Q2**：您在使用过程中遇到过什么问题，或者说有什么让您不满意的地方？
>
> **A2**：visual studio多文件编辑较为繁琐，很多功能较为依赖鼠标，造成编程的效率下降，报错十分繁复，启动慢，代码优化不合理，选项少，会出现意外的bug。Visual studio十分庞大，很多功能在日常的工作学习中不需要使用，没有代码托管功能，再多人合作项目的过程中造成了一定的麻烦。

> **Q3**：您在使用过程中有什么较好的使用体验，或者说有什么让您满意的地方？
>
> **A3**：DEV C++在使用过程中较为轻便，可以在平时的小作业中使用进行快速测试，visual studio在项目管理以及一些细节处理上做的很好，比如补全代码、自动对齐，以及源码的检索，支持多种语言编辑、编译，提供了大量的插件，扩展性较强，可以根据自己的需要定制IDE功能，自动生成类的声明和定义。

- ## 业务需求

  1. 背景

     > ​        智能时代的到来，使得人们的生活更加依赖于科技，因此对于很多开发人员，十分需要一个比较方便，灵活性很高的开发环境。

  2. 业务机遇

     > ​        但是现在已经有很多针对不同语言并且比较完备的开发环境存在，但是不那么完美，比如对于c语言的DEV C++，十分轻便，但是在很多的大项目的开发时显得功能过于薄弱；而支持多种语言的编程环境visual studio虽然便于代码的包装和编程过程中的一些智能处理，但是由于环境复杂，会出现很多开发上面的问题。

  3. 客户需求

     - 便捷、效率高的调试功能
     - 文件导入功能
     - 高效的文件编辑功能
     - 合理的代码优化
     - 代码托管
     - 自动补全代码、自动对齐
     - 代码检索
     - 多语言编辑、编译
     - 自动生成声明和定义
     - 丰富的插件
     - 自定义IDE功能

  4. 业务风险

     > 已经有很多比较完备的环境，因此新开发的软件需要有明显的优势才行。

  5. smart ide

     - **代码补全、自动对齐**：编写代码时对之前已经声明过的变量或者库函数进行自动补全，并且实现代码的自动对齐，对于不同层次的代码进行自动缩进
     
     - **自动生成框架**：可以根据开发项目的类型，进行框架的自动生成，并且自动添加可能需要的代码库
     - **去掉不需要加载的模块**：在编译过程中自动去掉编译过程中没有使用到的模块
     - **错误报告时记录当前的状态信息**：在编译过程中出现不同原因的中断，在产生中断的代码段处将此时的全部信息记录下来并且向客户展示，客户可以选择性的查看需要的数据，以确定中断原因，排除bug
     - **代码托管**：可以与代码托管平台等建立更为方便的对接，如可以提交到github上的某仓库，在实现较大的项目时方便用户使用
     - **自动保存**：不需用户手动保存当前状态，实时更新代码
     - **效率更高的优化**：编译过程中对代码进行优化

